{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/creamsuksen/Desktop/joytrip/src/app/components/Navbar.tsx"],"sourcesContent":["'use client';\n\nimport Link from 'next/link';\nimport Image from 'next/image';\n\nexport default function Navbar() {\n  return (\n    <nav className=\"sticky top-0 bg-white shadow z-50\">\n      <div className=\"max-w-6xl mx-auto px-6 py-4 flex items-center justify-between\">\n        {/* Left: Brand with Logo */}\n        <div className=\"flex items-center space-x-3\">\n          {/* Logo */}\n          <Image \n            src=\"/logo.jpg\" \n            alt=\"JoyTrip Logo\" \n            width={40}\n            height={40} \n            className=\"rounded-full\" // ทำให้โลโก้เป็นวงกลม\n          />\n          {/* Brand Name */}\n          <div className=\"text-2xl font-bold text-blue-600\">JoyTrip</div>\n        </div>\n\n        {/* Center: Navigation links */}\n        <ul className=\" hidden md:flex space-x-6 text-gray-700 absolute left-1/2 transform -translate-x-1/2\">\n          <li><Link href=\"/\">Home</Link></li>\n          <li><Link href=\"/#about\">About</Link></li>\n          <li><Link href=\"/#features\">Features</Link></li>\n          <li><Link href=\"/#contact\">Contact</Link></li>\n        </ul>\n\n        {/* Right: CTA */}\n        <Link\n          href=\"/chat\"\n          className=\"hidden md:block bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700\"\n        >\n          Create a Trip\n        </Link>\n      </div>\n    </nav>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC,6HAAA,CAAA,UAAK;4BACJ,KAAI;4BACJ,KAAI;4BACJ,OAAO;4BACP,QAAQ;4BACR,WAAU,eAAe,sBAAsB;;;;;;sCAGjD,8OAAC;4BAAI,WAAU;sCAAmC;;;;;;;;;;;;8BAIpD,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC;sCAAG,cAAA,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;0CAAI;;;;;;;;;;;sCACnB,8OAAC;sCAAG,cAAA,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;0CAAU;;;;;;;;;;;sCACzB,8OAAC;sCAAG,cAAA,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;0CAAa;;;;;;;;;;;sCAC5B,8OAAC;sCAAG,cAAA,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;0CAAY;;;;;;;;;;;;;;;;;8BAI7B,8OAAC,4JAAA,CAAA,UAAI;oBACH,MAAK;oBACL,WAAU;8BACX;;;;;;;;;;;;;;;;;AAMT","debugId":null}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file:///Users/creamsuksen/Desktop/joytrip/src/app/components/Footer.tsx"],"sourcesContent":["'use client';\n\nimport Image from 'next/image';\n\nexport default function Footer() {\n  return (\n    <footer id=\"contact\" className=\"bg-gray-900 text-gray-300 py-8 px-6 text-center\">\n      <p className=\"mb-4 text-lg\">\n        Have any questions? {' '}\n        contact via LINE\n      </p>\n      <Image\n        src=\"/qr.JPG\"\n        alt=\"QR Code\"\n        className='ml-150 mb-10'\n        width={200}\n        height={200}\n      />\n\n      <p className=\"text-sm\">© {new Date().getFullYear()} JoyTrip. All rights reserved.</p>\n    </footer>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBACE,8OAAC;QAAO,IAAG;QAAU,WAAU;;0BAC7B,8OAAC;gBAAE,WAAU;;oBAAe;oBACL;oBAAI;;;;;;;0BAG3B,8OAAC,6HAAA,CAAA,UAAK;gBACJ,KAAI;gBACJ,KAAI;gBACJ,WAAU;gBACV,OAAO;gBACP,QAAQ;;;;;;0BAGV,8OAAC;gBAAE,WAAU;;oBAAU;oBAAG,IAAI,OAAO,WAAW;oBAAG;;;;;;;;;;;;;AAGzD","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///Users/creamsuksen/Desktop/joytrip/src/app/components/ChatMessage.tsx"],"sourcesContent":["'use client';\n\nimport { FC } from 'react';\n\ninterface WeatherInfo {\n  location: string;\n  temperature: number;\n  condition: string;\n}\n\ninterface ChatMessageProps {\n  role: 'user' | 'bot';\n  text: string;\n  weather?: WeatherInfo;\n}\n\nconst ChatMessage: FC<ChatMessageProps> = ({ role, text, weather }) => {\n  return (\n    <div className={`flex ${role === 'user' ? 'justify-end' : 'justify-start'}`}>\n      <div\n        className={`px-5 py-3 rounded-lg shadow-md max-w-[80%] ${\n          role === 'user'\n            ? 'bg-blue-600 text-white rounded-br-none'\n            : 'bg-gray-100 text-gray-800 rounded-bl-none'\n        }`}\n      >\n        <div className=\"whitespace-pre-wrap\">{text}</div>\n        \n        {/* แสดงข้อมูลสภาพอากาศถ้ามี */}\n        {weather && (\n          <div className=\"mt-3 pt-3 border-t border-gray-300\">\n            <div className=\"flex items-center\">\n              <svg \n                xmlns=\"http://www.w3.org/2000/svg\" \n                width=\"24\" \n                height=\"24\" \n                viewBox=\"0 0 24 24\" \n                fill=\"none\" \n                stroke=\"currentColor\" \n                strokeWidth=\"2\" \n                strokeLinecap=\"round\" \n                strokeLinejoin=\"round\" \n                className=\"mr-2\"\n              >\n                <path d=\"M12 2a8 8 0 0 1 8 8c0 2.76-.98 5-2.2 6.7-1.2 1.7-2.8 2.8-4.8 3.3-.8.2-1.3-.1-1-1 .2-.6.3-1.2.4-1.8.1-.7-.4-1.2-1.1-1.2h-2.6c-.7 0-1.2.5-1.1 1.2.1.6.2 1.2.4 1.8.3.9-.2 1.2-1 1-2-.5-3.6-1.6-4.8-3.3C1 15 0 12.8 0 10a8 8 0 0 1 8-8h4z\"/>\n              </svg>\n              <span className=\"font-medium\">{weather.location}: </span>\n              <span className=\"ml-1\">{weather.temperature}°C, {weather.condition}</span>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatMessage;\n"],"names":[],"mappings":";;;;AAAA;;AAgBA,MAAM,cAAoC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE;IAChE,qBACE,8OAAC;QAAI,WAAW,CAAC,KAAK,EAAE,SAAS,SAAS,gBAAgB,iBAAiB;kBACzE,cAAA,8OAAC;YACC,WAAW,CAAC,2CAA2C,EACrD,SAAS,SACL,2CACA,6CACJ;;8BAEF,8OAAC;oBAAI,WAAU;8BAAuB;;;;;;gBAGrC,yBACC,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,OAAM;gCACN,OAAM;gCACN,QAAO;gCACP,SAAQ;gCACR,MAAK;gCACL,QAAO;gCACP,aAAY;gCACZ,eAAc;gCACd,gBAAe;gCACf,WAAU;0CAEV,cAAA,8OAAC;oCAAK,GAAE;;;;;;;;;;;0CAEV,8OAAC;gCAAK,WAAU;;oCAAe,QAAQ,QAAQ;oCAAC;;;;;;;0CAChD,8OAAC;gCAAK,WAAU;;oCAAQ,QAAQ,WAAW;oCAAC;oCAAK,QAAQ,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOhF;uCAEe","debugId":null}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":["file:///Users/creamsuksen/Desktop/joytrip/src/app/utils/n8nService.ts"],"sourcesContent":["/**\n * n8nService.ts\n * -------------\n * ไฟล์นี้จัดการการเชื่อมต่อและการส่งข้อมูลระหว่างแอพ JoyTrip และ n8n automation platform\n * รองรับการส่งข้อความจากผู้ใช้ไปยัง n8n และประมวลผลการตอบกลับในหลายรูปแบบ\n * \n * @author JoyTrip Team\n * @version 1.0\n */\n\n/**\n * WeatherInfo\n * ----------\n * Interface สำหรับข้อมูลสภาพอากาศ\n * - location: ชื่อสถานที่\n * - temperature: อุณหภูมิ (องศา)\n * - condition: สภาพอากาศ (เช่น มีเมฆ, แดดออก)\n * - icon?: URL ของไอคอนสภาพอากาศ (ถ้ามี)\n */\nexport interface WeatherInfo {\n  location: string;\n  temperature: number;\n  condition: string;\n  icon?: string;\n}\n\n/**\n * MessageResponse\n * --------------\n * Interface กำหนดรูปแบบข้อมูลที่ได้รับจาก n8n\n * - text: ข้อความตอบกลับจาก AI (จำเป็นต้องมี)\n * - weather?: ข้อมูลสภาพอากาศ (ถ้ามี)\n */\nexport interface MessageResponse {\n  text: string;\n  weather?: WeatherInfo;\n}\n\n\n/**\n * แหล่งข้อมูล\n * ---------\n */\n// URL ของ webhook บน n8n - ใช้เพื่อส่งข้อความและรับการตอบกลับ\nconst N8N_WEBHOOK_URL = 'https://joytrip2.app.n8n.cloud/webhook/2e3f1d63-42be-4c89-ae64-fd3cb2cfb9cf';\n\n// ตัวแปรควบคุมการใช้งานโหมดจำลองสำหรับทดสอบ\n// - false: ใช้งานการเชื่อมต่อกับ n8n webhook จริง\n// - true: ใช้ข้อมูลจำลองเพื่อทดสอบโดยไม่ต้องเชื่อมต่อ n8n\nconst USE_MOCK_MODE = false;\n\n/**\n * mockResponses\n * ------------\n * ข้อมูลจำลองสำหรับการทดสอบในโหมดออฟไลน์\n * มีคำตอบสำเร็จรูปสำหรับคำถามเกี่ยวกับ:\n * - อากาศ (weather)\n * - โรงแรม (hotel)\n * - อาหาร (food)\n * - วัด (temple)\n * - และคำตอบเริ่มต้น (default)\n */\nconst mockResponses: Record<string, MessageResponse> = {\n  default: {\n    text: 'ฉันเป็น AI ผู้ช่วยการท่องเที่ยวของคุณ และพร้อมช่วยวางแผนการเดินทางให้คุณ',\n  },\n  weather: {\n    text: 'ขณะนี้สภาพอากาศในกรุงเทพฯ ร้อนมาก ไม่เหมาะกับการท่องเที่ยวกลางแจ้ง แนะนำให้เที่ยวในห้างสรรพสินค้าหรือพิพิธภัณฑ์',\n    weather: {\n      location: 'กรุงเทพมหานคร',\n      temperature: 32,\n      condition: 'แดดจัด',\n    },\n  },\n  hotel: {\n    text: 'ฉันแนะนำโรงแรมในย่านสุขุมวิทที่เดินทางสะดวก ใกล้รถไฟฟ้า BTS และมีร้านอาหารดีๆ มากมายในบริเวณนั้น',\n  },\n  food: {\n    text: 'อาหารไทยที่คุณไม่ควรพลาดเมื่อมาเที่ยวประเทศไทย ได้แก่ ต้มยำกุ้ง ผัดไทย ส้มตำ และมัสมั่น ซึ่งเคยติดอันดับอาหารอร่อยที่สุดในโลก',\n  },\n  temple: {\n    text: 'วัดที่มีชื่อเสียงในกรุงเทพฯ ได้แก่ วัดพระแก้ว วัดอรุณ และวัดพระเชตุพนฯ (วัดโพธิ์) ซึ่งทั้งหมดอยู่ในเขตพระนคร สามารถเดินทางต่อเนื่องกันได้',\n  },\n};\n\n/**\n * sendMessageToN8n\n * ---------------\n * ส่งข้อความไปยัง n8n webhook และรับคำตอบกลับ\n * หรือใช้คำตอบจำลองในโหมดทดสอบ\n * \n * @param message - ข้อความที่ผู้ใช้ส่งเข้ามา\n * @returns Promise<MessageResponse> - คำตอบจาก AI พร้อมข้อมูลสภาพอากาศ (ถ้ามี)\n */\nexport const sendMessageToN8n = async (message: string): Promise<MessageResponse> => {\n  // ถ้าอยู่ในโหมดจำลอง ให้ใช้ข้อมูลจำลอง\n  if (USE_MOCK_MODE) {\n    await new Promise(resolve => setTimeout(resolve, 1000)); // จำลองความล่าช้าของเครือข่าย 1 วินาที\n    \n    // ตรวจสอบข้อความและเลือกคำตอบที่เหมาะสม\n    const lowercaseMessage = message.toLowerCase();\n    if (lowercaseMessage.includes('อากาศ') || lowercaseMessage.includes('weather')) {\n      return mockResponses.weather;\n    } else if (lowercaseMessage.includes('โรงแรม') || lowercaseMessage.includes('hotel')) {\n      return mockResponses.hotel;\n    } else if (lowercaseMessage.includes('อาหาร') || lowercaseMessage.includes('food')) {\n      return mockResponses.food;\n    } else if (lowercaseMessage.includes('วัด') || lowercaseMessage.includes('temple')) {\n      return mockResponses.temple;\n    } else {\n      return mockResponses.default;\n    }\n  }\n  \n  // หากไม่ได้อยู่ในโหมดจำลอง ให้เชื่อมต่อกับ webhook จริง\n  try {\n    /**\n     * การจัดการ timeout\n     * ---------------\n     * สร้าง AbortController เพื่อยกเลิกการเชื่อมต่อหากใช้เวลานานเกินไป\n     * timeout ตั้งไว้ที่ 10 วินาทีเพื่อป้องกันการรอนานเกินไป\n     */\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), 20000); // timeout หลัง 20 วินาที\n    \n    /**\n     * ส่งคำขอไปยัง n8n webhook\n     * ----------------------\n     * - method: POST - ส่งข้อมูลไปยัง webhook\n     * - headers: กำหนด Content-Type เป็น JSON\n     * - body: ข้อมูลที่ส่งประกอบด้วย\n     *   - message: ข้อความจากผู้ใช้\n     *   - timestamp: เวลาปัจจุบัน\n     *   - sessionId: ID สำหรับ session นี้ (ใช้เวลาปัจจุบันเพื่อให้ไม่ซ้ำกัน)\n     * - signal: ใช้สำหรับยกเลิกการเชื่อมต่อเมื่อหมดเวลา\n     */\n    const response = await fetch(N8N_WEBHOOK_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        message,\n        timestamp: new Date().toISOString(),\n        sessionId: 'joytrip-user-session-' + new Date().getTime(), // สร้าง sessionId ที่ไม่ซ้ำโดยใช้ timestamp\n      }),\n      signal: controller.signal\n    });\n    \n    // ล้าง timeout เมื่อได้รับการตอบกลับเรียบร้อยแล้ว\n    clearTimeout(timeoutId);\n\n    /**\n     * ตรวจสอบสถานะการตอบกลับ\n     * -----------------------------\n     * ถ้าไม่สำเร็จ (HTTP status ไม่ใช่ 200 OK) จะส่ง Error \n     */\n    if (!response.ok) {\n      throw new Error(`Error: ${response.status}`);\n    }\n\n    /**\n     * ตรวจสอบ Content-Type ของการตอบกลับ\n     * ---------------------------------------\n     * เพื่อกำหนดวิธีการประมวลผลที่เหมาะสม (JSON หรือ text)\n     */\n    const contentType = response.headers.get('content-type');\n    console.log('Response content type:', contentType);\n    \n    let data;\n    try {\n      /**\n       * วิธีที่ 1: ประมวลผลข้อมูล JSON\n       * ----------------------------\n       * สำหรับกรณีที่ Content-Type เป็น application/json\n       */\n      if (contentType && contentType.includes('application/json')) {\n        try {\n          // อ่านข้อมูลเป็น JSON object\n          data = await response.json();\n        } catch (jsonError) {\n          // ถ้าพบข้อผิดพลาดในการแปลง JSON\n          console.error('JSON parsing error:', jsonError);\n          \n          // อ่านข้อมูลดิบเป็นข้อความแทน (ใช้ clone เพราะ body ถูกใช้ไปแล้ว)\n          const textResponse = await response.clone().text();\n          console.log('Raw response text:', textResponse);\n          \n          // ถ้ามีข้อความ ใช้ข้อความนั้นโดยตรง\n          if (textResponse && textResponse.trim()) {\n            data = textResponse;\n          } else {\n            // ถ้าไม่มีข้อความ ให้ใช้ข้อความแจ้งเตือน\n            data = { text: 'ไม่มีคำตอบจากเซิร์ฟเวอร์ โปรดลองอีกครั้งภายหลัง' };\n          }\n        }\n      } \n      /**\n       * วิธีที่ 2: ประมวลผลข้อมูล Text\n       * ----------------------------\n       * สำหรับกรณีที่ Content-Type ไม่ใช่ application/json\n       * หรือไม่มี Content-Type ระบุมา\n       */\n      else {\n        // อ่านข้อมูลเป็นข้อความ\n        const textData = await response.text();\n        console.log('Text data received:', textData);\n        \n        // ถ้าไม่มีข้อความ ให้ใช้ข้อความแจ้งเตือน\n        if (!textData || textData.trim() === '') {\n          data = { text: 'ไม่มีคำตอบจากเซิร์ฟเวอร์ กรุณาลองอีกครั้ง' };\n        } else {\n          // ลองแปลงเป็น JSON ถ้าทำได้ (อาจจะเป็น JSON ที่ส่งมาโดยไม่ได้กำหนด Content-Type ที่ถูกต้อง)\n          try {\n            data = JSON.parse(textData);\n          } catch (e) {\n            // ถ้าแปลงไม่ได้ ให้ใช้เป็นข้อความโดยตรง\n            data = textData;\n          }\n        }\n      }\n    } catch (error) {\n      // จัดการข้อผิดพลาดที่ไม่คาดคิด\n      console.error('Error processing response:', error);\n      data = { text: 'เกิดข้อผิดพลาดในการประมวลผลคำตอบ' };\n    }\n    \n    /**\n     * ลงบันทึกข้อมูลที่ได้รับจาก n8n เพื่อการตรวจสอบ\n     */\n    console.log('Data received from n8n:', data);\n    \n    /**\n     * การแปลงข้อมูลให้ตรงกับรูปแบบที่ต้องการ\n     * ------------------------------------------\n     * n8n อาจส่งข้อมูลกลับมาในหลายรูปแบบ เราต้องแปลงให้อยู่ในรูปแบบที่แอพเข้าใจได้\n     * ตั้งค่าเริ่มต้นเป็นข้อความแจ้งเตือนในกรณีที่ไม่สามารถประมวลผลได้\n     */\n    let messageText = 'ไม่สามารถประมวลผลคำตอบได้';\n    let weatherData = undefined;\n    \n    /**\n     * การวิเคราะห์ข้อมูลจากหลายรูปแบบ\n     * ---------------------------------------\n     * ตรวจสอบโครงสร้างข้อมูลในหลายรูปแบบที่เป็นไปได้\n     */\n    if (typeof data === 'object') {\n      /**\n       * ลำดับความสำคัญในการตรวจสอบข้อมูล:\n       * 1. 'output' - พบในรูปภาพที่ผู้ใช้ส่งมา เป็นรูปแบบที่ n8n มักใช้\n       * 2. 'text' - รูปแบบมาตรฐานที่เรากำหนด\n       * 3. รูปแบบอื่นๆ - เพื่อให้รองรับกับทุกกรณี\n       */\n      \n      // ตรวจสอบฟิลด์ 'output' (มักพบใน n8n workflows)\n      if (data.output && typeof data.output === 'string') {\n        console.log('Found output field in JSON:', data.output);\n        messageText = data.output;\n      }\n      // ตรวจสอบรูปแบบมาตรฐาน { text, weather? }\n      else if (typeof data.text === 'string') {\n        messageText = data.text;\n        weatherData = data.weather;\n      }\n      // ตรวจสอบรูปแบบอื่นๆ ที่ n8n อาจส่งกลับมา\n      else if (typeof data.message === 'string') {\n        messageText = data.message;  // บางโหนดใช้ฟิลด์ 'message' แทน 'text'\n      }\n      else if (data.response && typeof data.response.text === 'string') {\n        messageText = data.response.text;  // รูปแบบซ้อน { response: { text, weather? } }\n        weatherData = data.response.weather;\n      }\n      else if (data.content && typeof data.content === 'string') {\n        messageText = data.content;  // บางโหนดใช้ฟิลด์ 'content' แทน 'text'\n      }\n      else if (data.result && typeof data.result === 'string') {\n        messageText = data.result;  // บางโหนดใช้ฟิลด์ 'result' แทน 'text'\n      }\n      // รองรับกรณีเกิด error ในโหนด AI ของ n8n \n      else if (data.error && typeof data.error === 'string') {\n        messageText = `เกิดข้อผิดพลาด: ${data.error}`;\n      }\n    }\n    /**\n     * กรณีข้อมูลเป็นข้อความ (string) ทั้งหมด\n     * n8n อาจส่งข้อความธรรมดากลับมาโดยไม่ได้ใส่โครงสร้าง JSON\n     */\n    else if (typeof data === 'string') {\n      // ถ้าเป็นข้อความโดยตรงจาก n8n ก็ใช้เลย (ตัด whitespace หัวท้าย)\n      messageText = data.trim();\n      console.log('Using direct text message from n8n:', messageText);\n    }\n    \n    /**\n     * สร้างคำตอบสุดท้ายในรูปแบบที่แอพต้องการ\n     * ประกอบด้วยข้อความตอบกลับและข้อมูลสภาพอากาศ (ถ้ามี)\n     */\n    const formattedResponse: MessageResponse = {\n      text: messageText,\n      weather: weatherData\n    };\n    \n    // บันทึกรูปแบบข้อมูลสุดท้ายที่จะส่งกลับไปยังแอพ\n    console.log('Formatted response:', formattedResponse);\n    return formattedResponse;\n  } catch (error) {\n    console.error('Error sending message to n8n:', error);\n    \n    // ถ้าเกิดข้อผิดพลาด ให้ใช้คำตอบจากโหมดจำลองแทน\n    const lowercaseMessage = message.toLowerCase();\n    if (lowercaseMessage.includes('อากาศ') || lowercaseMessage.includes('weather')) {\n      return mockResponses.weather;\n    } else {\n      return {\n        text: 'ขออภัย ฉันไม่สามารถเชื่อมต่อกับเซิร์ฟเวอร์ได้ในขณะนี้ กำลังทำงานในโหมดออฟไลน์ คุณสามารถถามคำถามพื้นฐานได้',\n      };\n    }\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 573, "column": 0}, "map": {"version":3,"sources":["file:///Users/creamsuksen/Desktop/joytrip/src/app/chat/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef } from 'react';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport ChatMessage from '../components/ChatMessage';\nimport { sendMessageToN8n } from '../utils/n8nService';\n\ninterface Message {\n  role: 'user' | 'bot';\n  text: string;\n  weather?: {\n    location: string;\n    temperature: number;\n    condition: string;\n  };\n}\n\nexport default function ChatbotPage() {\n  const [messages, setMessages] = useState<Message[]>([\n    { role: 'bot', text: 'Hi! How can I assist you with your trip planning today?' },\n  ]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  // Scroll only when user sends a message\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n  };\n\n  const handleSend = async () => {\n    if (!input.trim() || isLoading) return;\n\n    const userMessage = input;\n    setInput('');\n    setIsLoading(true);\n\n    // Add user message and scroll\n    setMessages((prev) => [...prev, { role: 'user', text: userMessage }]);\n    scrollToBottom();\n\n    try {\n      // Send to n8n webhook\n      const response = await sendMessageToN8n(userMessage);\n\n      // Add bot response\n      setMessages((prev) => [\n        ...prev,\n        {\n          role: 'bot',\n          text: response.text,\n          weather: response.weather\n        }\n      ]);\n    } catch (error) {\n      console.error('Error handling message:', error);\n      setMessages((prev) => [\n        ...prev,\n        {\n          role: 'bot',\n          text: 'Sorry, I encountered a problem. Please try again later.'\n        }\n      ]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col font-sans bg-white\">\n      <Navbar />\n\n      <main className=\"flex-1 flex justify-center bg-gradient-to-b from-blue-50 to-white px-4 py-10 mb-50\">\n        <div className=\"w-full max-w-3xl flex flex-col bg-white shadow-xl rounded-xl border border-gray-200\">\n          {/* Header */}\n          <div className=\"bg-blue-600 text-white text-center py-4 rounded-t-xl font-semibold text-lg\">\n            ✈️ JoyTrip AI Travel Assistant\n          </div>\n\n          {/* Messages */}\n          <div className=\"flex-1 px-4 py-6 space-y-4 overflow-y-auto\" style={{ maxHeight: '70vh' }}>\n            {messages.map((msg, i) => (\n              <ChatMessage\n                key={i}\n                role={msg.role}\n                text={msg.text}\n                weather={msg.weather}\n              />\n            ))}\n            {isLoading && (\n              <div className=\"flex justify-start\">\n                <div className=\"px-5 py-3 rounded-lg shadow-md bg-gray-100 text-gray-800 rounded-bl-none flex items-center\">\n                  <div className=\"flex space-x-2\">\n                    <div className=\"h-3 w-3 bg-blue-600 rounded-full animate-bounce\"></div>\n                    <div className=\"h-3 w-3 bg-blue-600 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                    <div className=\"h-3 w-3 bg-blue-600 rounded-full animate-bounce\" style={{ animationDelay: '0.4s' }}></div>\n                  </div>\n                </div>\n              </div>\n            )}\n            <div ref={messagesEndRef} />\n          </div>\n\n          {/* Input */}\n          <div className=\"border-t border-gray-200 p-4 flex gap-2 bg-white\">\n            <input\n              type=\"text\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              onKeyDown={(e) => e.key === 'Enter' && handleSend()}\n              placeholder=\"Ask your travel assistant...\"\n              className=\"flex-grow rounded-full border border-gray-300 px-4 py-3 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              autoFocus\n              disabled={isLoading}\n            />\n            <button\n              onClick={handleSend}\n              className={`${isLoading ? 'bg-blue-400' : 'bg-blue-600 hover:bg-blue-700'} text-white rounded-full px-6 py-3 font-semibold transition`}\n              disabled={isLoading}\n            >\n              {isLoading ? 'Sending...' : 'Send'}\n            </button>\n          </div>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAkBe,SAAS;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa;QAClD;YAAE,MAAM;YAAO,MAAM;QAA0D;KAChF;IACD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAE9C,wCAAwC;IACxC,MAAM,iBAAiB;QACrB,eAAe,OAAO,EAAE,eAAe;YAAE,UAAU;YAAU,OAAO;QAAU;IAChF;IAEA,MAAM,aAAa;QACjB,IAAI,CAAC,MAAM,IAAI,MAAM,WAAW;QAEhC,MAAM,cAAc;QACpB,SAAS;QACT,aAAa;QAEb,8BAA8B;QAC9B,YAAY,CAAC,OAAS;mBAAI;gBAAM;oBAAE,MAAM;oBAAQ,MAAM;gBAAY;aAAE;QACpE;QAEA,IAAI;YACF,sBAAsB;YACtB,MAAM,WAAW,MAAM,CAAA,GAAA,iIAAA,CAAA,mBAAgB,AAAD,EAAE;YAExC,mBAAmB;YACnB,YAAY,CAAC,OAAS;uBACjB;oBACH;wBACE,MAAM;wBACN,MAAM,SAAS,IAAI;wBACnB,SAAS,SAAS,OAAO;oBAC3B;iBACD;QACH,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;YACzC,YAAY,CAAC,OAAS;uBACjB;oBACH;wBACE,MAAM;wBACN,MAAM;oBACR;iBACD;QACH,SAAU;YACR,aAAa;QACf;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,mIAAA,CAAA,UAAM;;;;;0BAEP,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;sCAA6E;;;;;;sCAK5F,8OAAC;4BAAI,WAAU;4BAA6C,OAAO;gCAAE,WAAW;4BAAO;;gCACpF,SAAS,GAAG,CAAC,CAAC,KAAK,kBAClB,8OAAC,wIAAA,CAAA,UAAW;wCAEV,MAAM,IAAI,IAAI;wCACd,MAAM,IAAI,IAAI;wCACd,SAAS,IAAI,OAAO;uCAHf;;;;;gCAMR,2BACC,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAI,WAAU;;;;;;8DACf,8OAAC;oDAAI,WAAU;oDAAkD,OAAO;wDAAE,gBAAgB;oDAAO;;;;;;8DACjG,8OAAC;oDAAI,WAAU;oDAAkD,OAAO;wDAAE,gBAAgB;oDAAO;;;;;;;;;;;;;;;;;;;;;;8CAKzG,8OAAC;oCAAI,KAAK;;;;;;;;;;;;sCAIZ,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,MAAK;oCACL,OAAO;oCACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;oCACxC,WAAW,CAAC,IAAM,EAAE,GAAG,KAAK,WAAW;oCACvC,aAAY;oCACZ,WAAU;oCACV,SAAS;oCACT,UAAU;;;;;;8CAEZ,8OAAC;oCACC,SAAS;oCACT,WAAW,GAAG,YAAY,gBAAgB,gCAAgC,2DAA2D,CAAC;oCACtI,UAAU;8CAET,YAAY,eAAe;;;;;;;;;;;;;;;;;;;;;;;0BAMpC,8OAAC,mIAAA,CAAA,UAAM;;;;;;;;;;;AAGb","debugId":null}}]
}